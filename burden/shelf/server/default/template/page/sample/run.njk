<!--

  This is a really simple command tester.

-->

{% extends "../../layout/default.njk" %}

{% block yield %}

{# JSON viewer #}
<script src="https://cdn.jsdelivr.net/npm/jquery.json-viewer@1.4.0/json-viewer/jquery.json-viewer.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jquery.json-viewer@1.4.0/json-viewer/jquery.json-viewer.css">

{# Main content #}
<section id="section-page-run" class="row">

  <div class="col-12">
    <form id="form" v-on:submit.prevent="run">

      <div class="form-group">
        <control-run-action-list />
      </div>

      <div class="form-group">
        <control-run-action-parameter />
      </div>

      <div class="form-group">
        <control-run-action-file />
      </div>
    </form>
    <button
      class="btn btn-outline-primary"
      id="btn-sample"
      v-on:click="run">Run</button>
  </div>

  <hr class="col-12 mt-4" />

  <component-preview
    class="col-12"
    id="result-preview"
    v-bind:result="result" />

</section>

{% raw %}
<template id="template--control-run-action-list">
  <div class="input-group">
    <div class="input-group-prepend">
      <span class="input-group-text">Story</span>
    </div>
    <select class="custom-select" id="data-command">
      <option v-for="n of list" v-bind:value="n">{{ n }}</option>
    </select>
  </div>
</template>
{% endraw %}

<template id="template--control-run-action-parameter">
  <div class="input-group">
    <div class="input-group-prepend">
      <span class="input-group-text">Params</span>
    </div>
    <input
      class="form-control"
      id="data-parameter"
      value="{{ query.parameter or "" | escape }}">
  </div>
</template>

{% raw %}
<template id="template--control-run-action-file">
  <div class="input-group">
    <div class="input-group-prepend">
      <span class="input-group-text" id="uploading-addon">File</span>
    </div>
    <div class="custom-file">
      <input
        type="file"
        class="custom-file-input"
        id="upload"
        name="upload"
        @change="update"
        aria-describedby="uploading-addon"
        placeholder="Choose File...">
      <label
        class="custom-file-label"
        for="upload"
        ></label>
    </div>
  </div>
</template>

<script lang="javascript">
  APP.queue(() => {

    let V = APP.V("#section-page-run", {
      data(){
        return {
          result: {}
        }
      },
      methods: {
        run(){
          var d = {};
          d.command = $('#data-command').val();
          d.parameter = $('#data-parameter').val();
          proc_waiting();

          APP.request_gently(
            'post',
            "/run/" + d.command + (d.parameter ? "?" + d.parameter : ""),
            {
              data: new FormData($('#form')[0])
            })
            .then((r) => {
              proc_waiting(false);
              this.result = r;
            })
            .catch((e) => {
              proc_waiting(false);
              let r = {error: e.message};
              this.result = r;
            })
        }
      }
    });

    V.register("control-run-action-parameter", {
    });

    V.register("control-run-action-file", {
      data(){
        return {
          label: ""
        }
      },
      mounted(){
        this.dom = {};
        this.dom.label = this.$el.querySelector('.custom-file-label');
        this.dom.input = this.$el.querySelector('.custom-file-input');
        this.update_label();
      },
      methods: {
        update(e){
          this.update_label();
        },
        update_label(input){
          let $ip = $(this.dom.input);
          let spl = ($ip.val()).split(/[\/\\]/g);
          let v = spl.pop() || $ip.attr("placeholder");
          $ip.siblings('.custom-file-label').text(v);
        },
      },
    });

    V.register("control-run-action-list", {
      created(){
        APP.request('get', '/run/sample/list-action')
          .then((r) => {
            this.list = r;
          })
      },
      data(){
        return {
          list: []
        }
      }
    });

    V.register("component-preview", {
      props: ['result'],
      watch: {
        result(n, o){
          render_result(n);
        }
      }
    });

    /*
     */

    var loading_timer = null;

    function render_result(data){
      var box = $('#result-preview');
      box.jsonViewer(data);
    }

    function proc_waiting(num){
      var ln = 5;
      var tm = 1000;
      var sh = {"Loading": ""};
      if(num == undefined){
        sh.Loading = ".";
        render_result(sh);
        loading_timer = setTimeout(() => {
          proc_waiting(2);
        }, tm);
      }else{
        if(num == false){
          clearTimeout(loading_timer);
        }else{
          if(num <= ln){
            sh.Loading = Array(num).fill(".").join("");
            render_result(sh);
          }else{
            num = 1;
            sh.Loading = ".";
            render_result(sh);
          }
          loading_timer = setTimeout(() => {
            proc_waiting(num + 1);
          }, tm);

        }
      }
    }

  });
</script>
{% endraw %}
{% endblock %}
